{"version":3,"sources":["../../src/tabs/echarttpl.js"],"names":["example","toString","getOptions","data","asset","options","backgroundColor","xAxis","type","_data","yAxis","series"],"mappings":";;;;;;;uBAuBe,YAAU;AACrB,eAAOA,QAAQC,QAAR,EAAP;AACH,K;;;;;AAzBGD,mB,GAAW,SAASE,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAgC;AAC3C;;;;AAIA,oBAAIC,UAAU;AACVC,qCAAiB,aADP;AAEVC,2BAAO;AACHC,8BAAM,MADH;AAEHL,8BAAMA,KAAKM,KAAL,CAAWF;AAFd,qBAFG;AAMVG,2BAAO;AACHF,8BAAM;AADH,qBANG;AASVG,4BAAQ,CAAC;AACLR,8BAAMA,KAAKM,KAAL,CAAWE,MADZ;AAELH,8BAAM;AAFD,qBAAD;AATE,iBAAd;AAcA;AACA,uBAAOH,OAAP;AACA;AACH,a","file":"echarttpl.js","sourcesContent":["var example = (function getOptions(data, asset){\n    /**\n     * data: Same as tab \"Data\". Can be process by event 'data-changed'\n     * asset: Access to echart utils to load resources \n     */\n    var options = {\n        backgroundColor: 'transparent',\n        xAxis: {\n            type: 'time',\n            data: data._data.xAxis\n        },\n        yAxis: {\n            type: 'value'\n        },\n        series: [{\n            data: data._data.series,\n            type: 'line'\n        }]\n    };\n    // Return options\n    return options;\n    // Or promise: return new Promise((res, rej) => res(options));\n})\nexport default function(){\n    return example.toString();\n}"]}